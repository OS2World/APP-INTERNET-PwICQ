/*
 * OS2Start.c - Start session
 */

 #pragma strings(readonly)

 #define INCL_DOSSESMGR
 #define INCL_DOSPROCESS

 #include <stdlib.h>
 #include <stdio.h>

 #include "icqrexx.h"

#ifdef DEBUG
    #define NOEXEC
#endif

/*---[ Prototipes ]--------------------------------------------------------------------------*/


/*---[ Public ]------------------------------------------------------------------------------*/


/*---[ Implement ]---------------------------------------------------------------------------*/

 int EXPENTRY icqrexx_startHelper(HICQ icq, ULONG flags, UCHAR *PgmTitle, UCHAR *PgmName, UCHAR *parms)
 {
    STARTDATA    SData           = {0};
    PID          pid             = 0;
    ULONG        ulSessID        = 0;
    UCHAR        achObjBuf[256]  = {0};
    RESULTCODES  ChildRC;
    APIRET       rc;

    if(*PgmName == '*')
       PgmName = (PSZ) getenv("OS2_SHELL");

    if(!PgmTitle)
       PgmTitle = (PSZ) "pwICQ Helper";

    SData.Length        = sizeof(STARTDATA);
    SData.Related       = SSF_RELATED_INDEPENDENT; // start an independent session
    SData.FgBg          = SSF_FGBG_BACK;
    SData.TraceOpt      = SSF_TRACEOPT_NONE;       // No trace
    SData.PgmTitle      = PgmTitle;
    SData.PgmName       = PgmName;
    SData.PgmInputs     = (PSZ) parms;             // Keep session up
    SData.TermQ         = 0;                       // No termination queue
    SData.Environment   = 0;                       // No environment string
    SData.InheritOpt    = SSF_INHERTOPT_SHELL;     // Inherit shell's environ.
    SData.SessionType   = SSF_TYPE_DEFAULT;
    SData.IconFile      = 0;                       // No icon association
    SData.PgmHandle     = 0;
    SData.PgmControl    = 0;
    SData.InitXPos      = 30;     // Initial window coordinates
    SData.InitYPos      = 40;
    SData.InitXSize     = 200;    // Initial window size
    SData.InitYSize     = 140;
    SData.Reserved      = 0;
    SData.ObjectBuffer  = achObjBuf; // Contains info if DosExecPgm fails
    SData.ObjectBuffLen = (ULONG) sizeof(achObjBuf);

    switch(flags & 0x000c)
    {
    case 0x0004:
       DBGMessage("Visible");
       SData.PgmControl |= SSF_CONTROL_VISIBLE;
       break;
    case 0x0008:
       DBGMessage("Minimized");
       SData.PgmControl |= SSF_CONTROL_VISIBLE | SSF_CONTROL_MINIMIZE;
       break;
    default:
       DBGMessage("Invisible");
    }

    switch(flags & 0x0003)
    {
    case 0x0001:
       DBGMessage("FullScreen");
       SData.SessionType = SSF_TYPE_FULLSCREEN;
       break;

    case 0x0002:
       DBGMessage("PM");
       SData.SessionType = SSF_TYPE_PM;
       break;

    default:
       DBGMessage("OS/2 Window");
       SData.SessionType = SSF_TYPE_WINDOWABLEVIO;
       break;
    }

//#ifdef DEBUG
//    SData.PgmControl |= SSF_CONTROL_NOAUTOCLOSE;
//#endif

#ifdef NOEXEC
    rc = 0;
#else
    rc = DosStartSession(&SData, &ulSessID, &pid);
#endif

    DBGTrace(rc);

    if(rc)
    {
       sprintf(achObjBuf,"Error SYS%04d starting session",rc);
       icqWriteSysLog(icq,PROJECT,achObjBuf);
       icqWriteSysLog(icq,PROJECT,PgmTitle);
       icqWriteSysLog(icq,PROJECT,PgmName);
       icqWriteSysLog(icq,PROJECT,parms);
       return 0;
    }

    DBGTrace(ulSessID);
    DBGTrace(pid);

    return (int) pid;
 }

